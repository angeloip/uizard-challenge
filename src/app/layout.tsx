import './globals.css'
import type { Metadata } from 'next'
import { Roboto } from 'next/font/google'
import Link from 'next/link'
import { Suspense } from 'react'

const roboto = Roboto({
  weight: ['300', '400', '500', '700'],
  subsets: ['latin']
})

export const metadata: Metadata = {
  title: 'Uizard Challenge',
  description: 'Generated by create next app'
}

const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))

function ListItemLoading() {
  return (
    <div className="grid h-[50px] items-center">
      <div className="w-full animate-pulse" role="status">
        <div className="h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-full"></div>
        <span className="sr-only">Loading...</span>
      </div>
      <div className="flex items-center justify-between">
        <div className="w-full animate-pulse" role="status">
          <div className="h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-full"></div>
          <span className="sr-only">Loading...</span>
        </div>
        <div className="w-full animate-pulse flex justify-end" role="status">
          <div className="h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-14"></div>
          <span className="sr-only">Loading...</span>
        </div>
      </div>
    </div>
  )
}

async function ListItem({ id }: { id: number }) {
  await sleep(Math.random() * 3000)
  const post = await fetch(
    `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`
  ).then(
    (res) => res.json() as Promise<{ title: string; url: string; by: string }>
  )
  return (
    <div className="grid h-[50px]">
      <p className="truncate">{post.title}</p>
      <div className="flex items-center justify-between opacity-50">
        <p>{post.by}</p>
        <p>Visit website {`>>`}</p>
      </div>
    </div>
  )
}

async function ListLink({ id }: { id: number }) {
  return (
    <li className="p-4 border-b-gray-400 border-b">
      <Suspense fallback={<ListItemLoading />}>
        <Link href={`/${id}`}>
          <ListItem id={id} />
        </Link>
      </Suspense>
    </li>
  )
}

export default async function RootLayout({
  children
}: {
  children: React.ReactNode
}) {
  const post = await fetch(
    `https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty&limitToFirst=10&orderBy="$key"`
  ).then((res) => res.json() as Promise<number[]>)

  return (
    <html lang="en">
      <body className={roboto.className}>
        <section className="grid grid-rows-[60px,1fr] h-screen">
          <header className="bg-yellow-400 text-black font-medium grid place-content-center">
            Uizard Hackersnews Reader
          </header>
          <main className="grid grid-cols-[300px,1fr]">
            <aside>
              <ul className="flex flex-col">
                {post.map((id) => (
                  <ListLink key={id} id={id} />
                ))}
              </ul>
            </aside>
            <section>{children}</section>
          </main>
        </section>
      </body>
    </html>
  )
}
